plugins {
	id "fabric-loom" version "1.3-SNAPSHOT"
	id "legacy-looming" version "1.3-SNAPSHOT"
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

sourceSets {
	testmod {
		compileClasspath += main.compileClasspath
		runtimeClasspath += main.runtimeClasspath
	}
}

loom {
	mods {
		betterconfig {
			sourceSet sourceSets.main
		}
		testmod {
			sourceSet sourceSets.main
			sourceSet sourceSets.testmod
		}
	}

	runs {
		testmodClient {
			client()
			name = "Test Mod Client"
			source sourceSets.testmod
		}
		testmodServer {
			server()
			name = "Test Mod Server"
			source sourceSets.testmod
		}
	}
}

repositories {
	// Add repositories to retrieve artifacts from in here.
	// You should only use this when depending on other mods because
	// Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
	// See https://docs.gradle.org/current/userguide/declaring_repositories.html
	// for more information about repositories.
}

dependencies {
	// To change the versions see the gradle.properties file
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings(legacy.yarn(project.minecraft_version, project.yarn_mappings))
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	// Fabric API. This is technically optional, but you probably want it anyway.
	modImplementation "net.legacyfabric.legacy-fabric-api:legacy-fabric-api:${project.fabric_version}"
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.encoding = "UTF-8"
	if (JavaVersion.current().isJava9Compatible()) it.options.release = 8

	sourceCompatibility = JavaVersion.VERSION_1_8
	targetCompatibility = JavaVersion.VERSION_1_8
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename {"${it}_${project.archivesBaseName}"}
	}
}
